---
name: Greenboot Monitor

on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Monitor Issues
        id: monitor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          CONFIG_FILE: 'configs/greenboot.json'
        run: |
          python src/monitor_github_notify.py
          if [ -f new_issues.json ]; then
            echo "has_new_issues=true" >> $GITHUB_OUTPUT
            echo "issue_count=$(jq length new_issues.json)" >> \
              $GITHUB_OUTPUT
          else
            echo "has_new_issues=false" >> $GITHUB_OUTPUT
            echo "issue_count=0" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Issue for New Findings
        if: steps.monitor.outputs.has_new_issues == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const newIssues = JSON.parse(
              fs.readFileSync('new_issues.json', 'utf8'));
            const today = new Date().toISOString().split('T')[0];

            let body = `Found ${newIssues.length} new GitHub issue${
              newIssues.length > 1 ? 's' : ''} matching keywords:\n\n`;

            for (const issue of newIssues) {
              body += `## 📋 [${issue.title}](${issue.html_url})\n\n`;
              body += `- **Repository:** \`${issue.repository}\`\n`;
              body += `- **Author:** [@${issue.user}](https://github.com/${
                issue.user})\n`;
              body += `- **Created:** ${
                new Date(issue.created_at).toLocaleString()}\n`;
              body += `- **Link:** ${issue.html_url}\n\n`;

              if (issue.body && issue.body.length > 0) {
                const preview = issue.body.substring(0, 200);
                body += `**Preview:**\n> ${preview}${
                  issue.body.length > 200 ? '...' : ''}\n\n`;
              }

              body += `---\n\n`;
            }

            body += `\n*This issue was automatically created by the ` +
              `GitHub issue monitor on ${today}*`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🔍 ${newIssues.length} new issue${
                newIssues.length > 1 ? 's' : ''} found - ${today}`,
              body: body,
              labels: ['github-monitor', 'notification', 'auto-created']
            });

            console.log(`✅ Created GitHub issue for ${
              newIssues.length} new findings`);
